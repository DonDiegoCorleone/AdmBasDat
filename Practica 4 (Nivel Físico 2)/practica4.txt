El tablespace TS_SECRETARIA ya está creado de la práctica anterior

--1.CREACION DEL USUARIO TABLESPACE
--desde SYSTEM

create user secretaria identified by bd default tablespace TS_SECRETARIA QUOTA 5M ON TS_SECRETARIA;
GRANT
    CONNECT,
    CREATE TABLE,
    CREATE VIEW,
    CREATE PROCEDURE,
    CREATE SEQUENCE,
    CREATE MATERIALIZED VIEW
        TO secretaria;
create tablespace TS_INDICES datafile 'ts_indices.dbf' size 50M;
select * from dba_tablespaces;
select username,default_tablespace from dba_users;
select * from v$datafile;

--2.CREACION DEL ESQUEMA
--desde SECRETARIA
DROP TABLE alumno CASCADE CONSTRAINTS;

DROP TABLE asig CASCADE CONSTRAINTS;

DROP TABLE asig_matr CASCADE CONSTRAINTS;

DROP TABLE centro CASCADE CONSTRAINTS;

DROP TABLE clase CASCADE CONSTRAINTS;

DROP TABLE encuesta CASCADE CONSTRAINTS;

DROP TABLE encuesta_gpa CASCADE CONSTRAINTS;

DROP TABLE exp CASCADE CONSTRAINTS;

DROP TABLE gpa CASCADE CONSTRAINTS;

DROP TABLE grupo CASCADE CONSTRAINTS;

DROP TABLE matr CASCADE CONSTRAINTS;

DROP TABLE opt CASCADE CONSTRAINTS;

DROP TABLE titu CASCADE CONSTRAINTS;

DROP TABLE titu_centro CASCADE CONSTRAINTS;

DROP TABLE titu_opt CASCADE CONSTRAINTS;

CREATE TABLE alumno (
    dni                     VARCHAR2(50 CHAR) NOT NULL,
    nombre                  VARCHAR2(50 CHAR) NOT NULL,
    apellido1               VARCHAR2(50 CHAR) NOT NULL,
    apellido2               VARCHAR2(50 CHAR),
    num_expediente          INTEGER,
    num_archivo             VARCHAR2(50 CHAR),
    email_institucional     VARCHAR2(100 CHAR) NOT NULL,
    email_personal          VARCHAR2(100 CHAR),
    telefono                VARCHAR2(20 CHAR),
    movil                   VARCHAR2(20 CHAR),
    direccion_notificacion  VARCHAR2(50 CHAR),
    localidad_notificacion  VARCHAR2(50 CHAR),
    provincia_notificacion  VARCHAR2(50 CHAR),
    cp_notificacion         INTEGER,
    fecha_matricula         VARCHAR2(100 CHAR),
    turno_preferente        VARCHAR2(100 CHAR),
    grupos_asignados        VARCHAR2(255 CHAR),
    nota_media              INTEGER,
    creditos_superados      INTEGER,
    creditos_fb             INTEGER,
    creditos_ob             INTEGER,
    creditos_op             INTEGER,
    creditos_cf             INTEGER,
    creditos_pe             INTEGER,
    creditos_tf             INTEGER
);

ALTER TABLE alumno ADD CONSTRAINT alumno_pk PRIMARY KEY ( dni ) USING INDEX TABLESPACE TS_INDICES;

CREATE TABLE asig (
    referencia         INTEGER NOT NULL,
    ofertada           VARCHAR2(20) NOT NULL,
    codigo_1           INTEGER NOT NULL,
    asignatura         VARCHAR2(100 CHAR),
    curso              INTEGER,
    creditos_teoria    INTEGER NOT NULL,
    creditos_practica  INTEGER,
    total_creditos     INTEGER,
    caracter           VARCHAR2(20 CHAR),
    duracion           VARCHAR2(50 CHAR),
    plazas             VARCHAR2(50 CHAR),
    otro_idioma        VARCHAR2(20 CHAR),
    titu_codigo        INTEGER NOT NULL
);

ALTER TABLE asig ADD CONSTRAINT asig_pk PRIMARY KEY ( referencia ) USING INDEX TABLESPACE TS_INDICES;

CREATE TABLE asig_matr (
    matr_curso       INTEGER NOT NULL,
    matr_exp_num     INTEGER NOT NULL,
    asig_referencia  INTEGER NOT NULL,
    grupo_id         INTEGER
);

ALTER TABLE asig_matr
    ADD CONSTRAINT asig_matr_pk PRIMARY KEY ( matr_curso,
                                              matr_exp_num,
                                              asig_referencia ) USING INDEX TABLESPACE TS_INDICES;

CREATE TABLE centro (
    id               INTEGER NOT NULL,
    nombre           VARCHAR2(20 CHAR) NOT NULL,
    direccion        VARCHAR2(20 CHAR) NOT NULL,
    tlf_conserjeria  VARCHAR2(20 CHAR)
);

ALTER TABLE centro ADD CONSTRAINT centro_pk PRIMARY KEY ( id ) USING INDEX TABLESPACE TS_INDICES;

ALTER TABLE centro ADD CONSTRAINT centro_nombre_un UNIQUE ( nombre );

CREATE TABLE clase (
    dia              INTEGER NOT NULL,
    hora_inicio      DATE NOT NULL,
    hora__fin        DATE,
    asig_referencia  INTEGER NOT NULL,
    grupo_id         INTEGER NOT NULL
);

ALTER TABLE clase
    ADD CONSTRAINT clase_pk PRIMARY KEY ( dia,
                                          hora_inicio,
                                          grupo_id ) USING INDEX TABLESPACE TS_INDICES;

CREATE TABLE encuesta (
    fecha_de_envio  DATE NOT NULL,
    exp_num         INTEGER NOT NULL
);

ALTER TABLE encuesta ADD CONSTRAINT encuesta_pk PRIMARY KEY ( fecha_de_envio ) USING INDEX TABLESPACE TS_INDICES;

CREATE TABLE encuesta_gpa (
    encuesta_fecha_de_envio  DATE NOT NULL,
    gpa_c                    INTEGER NOT NULL,
    gpa_asig_referencia      INTEGER NOT NULL,
    gpa_id                   INTEGER NOT NULL
);

ALTER TABLE encuesta_gpa
    ADD CONSTRAINT encuesta_gpa_pk PRIMARY KEY ( encuesta_fecha_de_envio,
                                                 gpa_c,
                                                 gpa_asig_referencia,
                                                 gpa_id ) USING INDEX TABLESPACE TS_INDICES;

CREATE TABLE exp (
    num          INTEGER NOT NULL,
    activo       CHAR(1),
    nota_media   INTEGER,
    titu_codigo  INTEGER NOT NULL,
    alumno_dni   VARCHAR2(50 CHAR) NOT NULL
);

ALTER TABLE exp ADD CONSTRAINT exp_pk PRIMARY KEY ( num ) USING INDEX TABLESPACE TS_INDICES;

CREATE TABLE gpa (
    c                INTEGER NOT NULL,
    oferta           CHAR(1),
    asig_referencia  INTEGER NOT NULL,
    grupo_id         INTEGER NOT NULL
);

ALTER TABLE gpa
    ADD CONSTRAINT gpa_pk PRIMARY KEY ( c,
                                        asig_referencia,
                                        grupo_id ) USING INDEX TABLESPACE TS_INDICES;

CREATE TABLE grupo (
    id                  INTEGER NOT NULL,
    curso               INTEGER NOT NULL,
    letra               VARCHAR2(20 CHAR) NOT NULL,
    turno_manana_tarde  VARCHAR2(20 CHAR) NOT NULL,
    ingles              CHAR(1) NOT NULL,
    visible             CHAR(1),
    asignar             VARCHAR2(20 CHAR),
    plazas              INTEGER,
    titu_codigo         INTEGER NOT NULL,
    grupo_id            INTEGER
);

ALTER TABLE grupo ADD CONSTRAINT grupo_pk PRIMARY KEY ( id ) USING INDEX TABLESPACE TS_INDICES;

ALTER TABLE grupo ADD CONSTRAINT grupo_curso_letra_un UNIQUE ( curso,
                                                               letra );

CREATE TABLE matr (
    curso                INTEGER NOT NULL,
    estado               VARCHAR2(20 CHAR),
    num_archivo          INTEGER,
    turno_pref           VARCHAR2(20 CHAR),
    fecha                DATE NOT NULL,
    nuevo_ingreso        CHAR(1),
    listado_asignaturas  VARCHAR2(50 CHAR),
    exp_num              INTEGER NOT NULL
);

ALTER TABLE matr ADD CONSTRAINT matr_pk PRIMARY KEY ( curso,
                                                      exp_num ) USING INDEX TABLESPACE TS_INDICES;

CREATE TABLE opt (
    referencia  INTEGER NOT NULL,
    mencion     VARCHAR2(50 CHAR)
);

ALTER TABLE opt ADD CONSTRAINT opt_pk PRIMARY KEY ( referencia ) USING INDEX TABLESPACE TS_INDICES;

CREATE TABLE titu (
    codigo    INTEGER NOT NULL,
    nombre    VARCHAR2(100 CHAR),
    creditos  INTEGER
);

ALTER TABLE titu ADD CONSTRAINT titu_pk PRIMARY KEY ( codigo ) USING INDEX TABLESPACE TS_INDICES;

CREATE TABLE titu_centro (
    titu_codigo  INTEGER NOT NULL,
    centro_id    INTEGER NOT NULL
);

ALTER TABLE titu_centro ADD CONSTRAINT titu_centro_pk PRIMARY KEY ( titu_codigo,
                                                                    centro_id ) USING INDEX TABLESPACE TS_INDICES;

CREATE TABLE titu_opt (
    titu_codigo     INTEGER NOT NULL,
    opt_referencia  INTEGER NOT NULL
);

ALTER TABLE titu_opt ADD CONSTRAINT titu_opt_pk PRIMARY KEY ( titu_codigo,
                                                              opt_referencia ) USING INDEX TABLESPACE TS_INDICES;

ALTER TABLE asig_matr
    ADD CONSTRAINT asig_matr_asig_fk FOREIGN KEY ( asig_referencia )
        REFERENCES asig ( referencia );

ALTER TABLE asig_matr
    ADD CONSTRAINT asig_matr_grupo_fk FOREIGN KEY ( grupo_id )
        REFERENCES grupo ( id );

ALTER TABLE asig_matr
    ADD CONSTRAINT asig_matr_matr_fk FOREIGN KEY ( matr_curso,
                                                   matr_exp_num )
        REFERENCES matr ( curso,
                          exp_num );

ALTER TABLE asig
    ADD CONSTRAINT asig_titu_fk FOREIGN KEY ( titu_codigo )
        REFERENCES titu ( codigo );

ALTER TABLE clase
    ADD CONSTRAINT clase_asig_fk FOREIGN KEY ( asig_referencia )
        REFERENCES asig ( referencia );

ALTER TABLE clase
    ADD CONSTRAINT clase_grupo_fk FOREIGN KEY ( grupo_id )
        REFERENCES grupo ( id );

ALTER TABLE encuesta
    ADD CONSTRAINT encuesta_exp_fk FOREIGN KEY ( exp_num )
        REFERENCES exp ( num );

ALTER TABLE encuesta_gpa
    ADD CONSTRAINT encuesta_gpa_encuesta_fk FOREIGN KEY ( encuesta_fecha_de_envio )
        REFERENCES encuesta ( fecha_de_envio );

ALTER TABLE encuesta_gpa
    ADD CONSTRAINT encuesta_gpa_gpa_fk FOREIGN KEY ( gpa_c,
                                                     gpa_asig_referencia,
                                                     gpa_id )
        REFERENCES gpa ( c,
                         asig_referencia,
                         grupo_id );

ALTER TABLE exp
    ADD CONSTRAINT exp_alumno_fk FOREIGN KEY ( alumno_dni )
        REFERENCES alumno ( dni );

ALTER TABLE exp
    ADD CONSTRAINT exp_titu_fk FOREIGN KEY ( titu_codigo )
        REFERENCES titu ( codigo );

ALTER TABLE gpa
    ADD CONSTRAINT gpa_asig_fk FOREIGN KEY ( asig_referencia )
        REFERENCES asig ( referencia );

ALTER TABLE gpa
    ADD CONSTRAINT gpa_grupo_fk FOREIGN KEY ( grupo_id )
        REFERENCES grupo ( id );

ALTER TABLE grupo
    ADD CONSTRAINT grupo_grupo_fk FOREIGN KEY ( grupo_id )
        REFERENCES grupo ( id );

ALTER TABLE grupo
    ADD CONSTRAINT grupo_titu_fk FOREIGN KEY ( titu_codigo )
        REFERENCES titu ( codigo );

ALTER TABLE matr
    ADD CONSTRAINT matr_exp_fk FOREIGN KEY ( exp_num )
        REFERENCES exp ( num );

ALTER TABLE opt
    ADD CONSTRAINT opt_asig_fk FOREIGN KEY ( referencia )
        REFERENCES asig ( referencia );

ALTER TABLE titu_centro
    ADD CONSTRAINT titu_centro_centro_fk FOREIGN KEY ( centro_id )
        REFERENCES centro ( id );

ALTER TABLE titu_centro
    ADD CONSTRAINT titu_centro_titu_fk FOREIGN KEY ( titu_codigo )
        REFERENCES titu ( codigo );

ALTER TABLE titu_opt
    ADD CONSTRAINT titu_opt_opt_fk FOREIGN KEY ( opt_referencia )
        REFERENCES opt ( referencia );

ALTER TABLE titu_opt
    ADD CONSTRAINT titu_opt_titu_fk FOREIGN KEY ( titu_codigo )
        REFERENCES titu ( codigo );

--4.TABLAS EXTERNAS
create table alumnos_ext(DOCUMENTO	VARCHAR2(200),
NOMBRE	VARCHAR2(200),
"1º APELLIDO" VARCHAR2(200),
"2º APELLIDO" VARCHAR2(200),
"Nº EXPEDIENTE" VARCHAR2(200),
"Nº ARCHIVO" VARCHAR2(200),
EMAIL_INSTITUCIONAL	VARCHAR2(200),
EMAIL_PERSONAL	VARCHAR2(200),
TELEFONO	VARCHAR2(200),
MOVIL	VARCHAR2(200),
DIRECCION_NOTIFICACION	VARCHAR2(200),
LOCALIDAD_NOTIFICACION	VARCHAR2(200),
PROVINCIA_NOTIFICACION	VARCHAR2(200),
CP_NOTIFICACION	VARCHAR2(200),
FECHA_MATRICULA	VARCHAR2(200),
TURNO_PREFERENTE	VARCHAR2(200),
GRUPOS_ASIGNADOS	VARCHAR2(200),
NOTA_MEDIA	INTEGER,
CREDITOS_SUPERADOS INTEGER,
CREDITOS_FB	INTEGER,
CREDITOS_OB	INTEGER,
CREDITOS_OP	INTEGER,
CREDITOS_CF	INTEGER,
CREDITOS_PE	INTEGER,
CREDITOS_TF	INTEGER
)
organization external
(default directory directorio_ext
access parameters 
(records delimited by newline
skip 4
    fields terminated by ';'
)
location('alumnos.csv'));

select * from alumnos_ext;

insert into alumno select 
documento,nombre,
"1º APELLIDO","2º APELLIDO","Nº EXPEDIENTE","Nº ARCHIVO",email_institucional,email_personal,
telefono,movil,direccion_notificacion,localidad_notificacion,provincia_notificacion,
cp_notificacion,fecha_matricula,turno_preferente,grupos_asignados,nota_media,
creditos_superados,creditos_FB,creditos_OB,creditos_OP,creditos_CF,creditos_PE,creditos_TF
from alumnos_ext;


--5.INDICES
select table_name,tablespace_name from user_tables where table_name = 'ALUMNO';
select index_name,tablespace_name from user_indexes;

create bitmap index idx_curso ON asig(curso) tablespace TS_INDICES; 
create bitmap index idx_caracter ON asig(caracter) tablespace TS_INDICES;
create bitmap index idx_cuat ON asig(duracion) tablespace TS_INDICES; 

SELECT * FROM USER_INDEXES WHERE INDEX_TYPE='BITMAP';
