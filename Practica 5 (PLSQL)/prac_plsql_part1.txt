--1
create or replace FUNCTION CURSO_ACTUAL RETURN VARCHAR2 AS
CADENA VARCHAR2(20);
BEGIN
CADENA := substr(extract(year from sysdate),3,4);
IF(to_date('05-10-'||CADENA,'DD-MM-YY') < sysdate) 
THEN CADENA:=CADENA||'/'||TO_CHAR(TO_NUMBER(CADENA)+1);
ELSIF TRUE THEN CADENA := TO_CHAR(TO_NUMBER(CADENA)-1)||'/'||CADENA;
END IF;
RETURN CADENA;
END CURSO_ACTUAL;
--2
create or replace FUNCTION OBTEN_GRUPO_ID(Titulacion VARCHAR2,Curso NUMBER, Letra VARCHAR2) RETURN VARCHAR2 AS
cod_titu NUMBER;
cod_gr NUMBER;
BEGIN
SELECT CODIGO INTO cod_titu from TITU where NOMBRE LIKE Titulacion;
SELECT ID INTO cod_gr from GRUPO where CURSO LIKE Curso and LETRA LIKE Letra and TITU_CODIGO LIKE cod_titu;
RETURN to_char(cod_gr);
END OBTEN_GRUPO_ID;
--3
CREATE GLOBAL TEMPORARY TABLE "SECRETARIA"."TEMP_ASIGNATURAS"
("CODIGO" NUMBER, GRUPO VARCHAR2(10)
) ON COMMIT DELETE ROWS;
--4
create or replace procedure NORMALIZA_ASIGNATURAS (pcadena varchar2, Titulacion varchar2 default null) 
AS
cod VARCHAR2(200);
coma NUMBER;
guion NUMBER;
grupo_id VARCHAR2(200);
letra VARCHAR2(20);
hayCOMA boolean;
BEGIN

hayCOMA:=true;
coma:=0;
guion:=0;

WHILE hayCOMA=TRUE LOOP
cod:=SUBSTR(pcadena,coma+1,3);
grupo_id:=null;
coma:=instr(pcadena,',',coma+1);
guion:=instr(pcadena,'-',guion+1);


if(coma!=0)then

if(guion+1!=coma)then--hay letra
letra:=substr(pcadena,guion+1,guion+1);
grupo_id:=OBTEN_GRUPO_ID(Titulacion,substr(cod,1,1),letra);
end if;

else 
hayCOMA:=false;
letra:=substr(pcadena,guion+1,guion+1);
if(letra is not null)then
grupo_id:=OBTEN_GRUPO_ID(Titulacion,substr(cod,1,1),letra);
else
grupo_id:=null;
end if;

end if;


insert into "SECRETARIA"."TEMP_ASIGNATURAS" values (cod,grupo_id);

END LOOP;
END NORMALIZA_ASIGNATURAS;
--5
create or replace procedure RELLENA_ASIG_MATRICULA
AS
ref Varchar2(20);
curso Varchar2(20);
grupo Varchar2(20);
exp Varchar2(20);
titu number;
cursor c_calumnos is SELECT GRUPOS_ASIGNADOS, n_expediente FROM ALUMNOS_EXT;
cursor c_cgrupos is SELECT codigo, grupo FROM temp_asignaturas;
BEGIN

    FOR Var_asignaturas IN c_calumnos LOOP
        titu := substr(to_char(VAr_asignaturas.n_expediente), 1, 4);
        NORMALIZA_ASIGNATURAS(Var_asignaturas.grupos_asignados, titu);
         FOR Var_codigo IN c_cgrupos LOOP
            select referencia into ref from asig where codigo_1=Var_codigo.codigo and titu_codigo=titu;
            curso := curso_actual;
            insert into ASIG_MATR (MATR_CURSO, MATR_EXP_NUM, ASIG_REFERENCIA, GRUPO_ID) values (curso, exp, ref, Var_codigo.grupo);
        END LOOP;
    END LOOP;
END RELLENA_ASIG_MATRICULA;
