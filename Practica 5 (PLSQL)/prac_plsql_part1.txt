--1
create or replace FUNCTION CURSO_ACTUAL RETURN VARCHAR2 AS
CADENA VARCHAR2(20);
BEGIN
CADENA := substr(extract(year from sysdate),3,4);
IF(to_date('05-10-'||CADENA,'DD-MM-YY') < sysdate) 
THEN CADENA:=CADENA||TO_CHAR(TO_NUMBER(CADENA)+1);
ELSIF TRUE THEN CADENA := TO_CHAR(TO_NUMBER(CADENA)-1)||CADENA;
END IF;
RETURN CADENA;
END CURSO_ACTUAL;
--2
create or replace FUNCTION OBTEN_GRUPO_ID(Titulacion VARCHAR2,Curso NUMBER, Letra VARCHAR2) RETURN VARCHAR2 AS
cod_titu NUMBER;
cod_gr NUMBER;
BEGIN
SELECT CODIGO INTO cod_titu from TITU where NOMBRE LIKE Titulacion;
SELECT ID INTO cod_gr from GRUPO where CURSO LIKE Curso and LETRA LIKE Letra and TITU_CODIGO LIKE cod_titu;
RETURN to_char(cod_gr);
END OBTEN_GRUPO_ID;
--3
CREATE GLOBAL TEMPORARY TABLE "SECRETARIA"."TEMP_ASIGNATURAS"
("CODIGO" NUMBER, GRUPO VARCHAR2(10)
) ON COMMIT DELETE ROWS;
--4
create or replace procedure NORMALIZA_ASIGNATURAS (pcadena varchar2, Titulacion varchar2 default null) 
AS
CONTADOR NUMBER;
COD NUMBER;
LETRA VARCHAR2(30);

GRUPO_ID VARCHAR2(30); 
REP NUMBER;
BLOQUE VARCHAR2(200);
GUION NUMBER;
BEGIN
CONTADOR := 1;
select * into REP from(select count(*) from (select regexp_substr('pcadena','[^,]+', 1, level) 
from dual connect by regexp_substr('pcadena', '[^,]+', 1, level) is not null));

    WHILE ( CONTADOR <= REP ) LOOP
         
         select * into BLOQUE from(select regexp_substr(pcadena,'[^,]+', 1, level) 
         from dual where rownum= CONTADOR  connect by regexp_substr(pcadena, '[^,]+', 1, level) is not null);
         
         GUION := INSTR(BLOQUE,'-');
         
         COD := substr(BLOQUE,1,GUION-1);
         LETRA := substr(BLOQUE,GUION+1, 1);
         
	 IF (LETRA!=NULL) THEN

         GRUPO_ID := OBTEN_GRUPO_ID(Titulacion, substr(COD,1,1), letra);

         
	 ELSE
	 GRUPO_ID :=NULL;
	 END IF;
	 
	 insert into "SECRETARIA"."TEMP_ASIGNATURAS" values (COD, GRUPO_ID);
	
         CONTADOR := CONTADOR + 1; 
         END LOOP;

END NORMALIZA_ASIGNATURAS;
/
--5