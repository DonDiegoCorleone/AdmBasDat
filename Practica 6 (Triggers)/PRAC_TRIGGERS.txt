--1.1
CREATE TABLE MENSAJES (
    codigo NUMBER(20) PRIMARY KEY,
    texto VARCHAR2(200));

CREATE TABLE audita_mensajes (
    quien VARCHAR2(20),
    como VARCHAR2(20),
    cuando DATE);

--1.2
CREATE OR REPLACE TRIGGER audita_mensajes
BEFORE INSERT OR UPDATE ON MENSAJES
    BEGIN
    IF INSERTING THEN
    INSERT INTO AUDITA_MENSAJES VALUES(USER,'INSERT',SYSDATE);
    END IF;
    IF UPDATING THEN
    INSERT INTO AUDITA_MENSAJES VALUES(USER,'INSERT',SYSDATE);
    END IF;
END audita_mensajes;

--2
ALTER TABLE MENSAJES ADD TIPO VARCHAR2(30);

INSERT INTO MENSAJES VALUES(1,'BUEN DATO','INFORMACIÓN');
INSERT INTO MENSAJES VALUES(2,'1€ SON 1000 PESETAS','INFORMACIÓN');

INSERT INTO MENSAJES VALUES(3,'TRANQUILO BROCO','RESTRICCION');
INSERT INTO MENSAJES VALUES(4,'RESTRICCION INMINENTE','RESTRICCION');

INSERT INTO MENSAJES VALUES(5,'ERROR BROCO','ERROR');
INSERT INTO MENSAJES VALUES(6,'ILLO ERROR','ERROR');

INSERT INTO MENSAJES VALUES(7,'TEN CUIDAO BROCO','AVISO');
INSERT INTO MENSAJES VALUES(8,'CUCHAME','AVISO');

INSERT INTO MENSAJES VALUES(9,'ILLO AYUDA','AYUDA');
INSERT INTO MENSAJES VALUES(10,'NO EN SERIO AYUDA MANO','AYUDA');

CREATE TABLE MENSAJES_INFO(
Tipo VARCHAR2(30) PRIMARY KEY,
Cuantos_Mensajes NUMBER(2),
Ultimo VARCHAR2(200)
);

CREATE OR REPLACE TRIGGER mensaje_info
AFTER INSERT OR UPDATE OR DELETE ON MENSAJES FOR EACH ROW
BEGIN
IF INSERTING THEN
UPDATE MENSAJES_INFO SET
Cuantos_Mensajes:=Cuantos_Mensajes+1;
Ultimo:=:new.texto;
WHERE TIPO=:new.tipo;
END IF;
IF DELETING THEN
UPDATE MENSAJES_INFO SET
Cuantos_Mensajes:=Cuantos_Mensajes-1;
Ultimo:=null;
WHERE Tipo=:old.Tipo;
END IF;
IF UPDATING THEN

UPDATE MENSAJES_INFO SET
Cuantos_Mensajes:=Cuantos_Mensajes-1;
Ultimo:=null;
WHERE Tipo=:old.Tipo;

UPDATE MENSAJES_INFO SET
Cuantos_Mensajes:=Cuantos_Mensajes+1;
Ultimo:=:new.texto;
WHERE Tipo=:new.Tipo;

END IF;
END mensaje_info;

--3
DROP TABLE MENSAJES;

CREATE TABLE MENSAJES_TEXTO (
    codigo VARCHAR2(20),
    texto VARCHAR2(200));

CREATE TABLE MENSAJES_TIPO (
    codigo VARCHAR2(20),
    tipo VARCHAR2(30));

CREATE OR REPLACE VIEW MENSAJES AS
SELECT MTE.codigo, texto, tipo
FROM MENSAJES_TEXTO MTE JOIN MENSAJES_TIPO MTI ON MTE.codigo=MTI.codigo;

--Si
--No se puede insertar directamente en vistas
--Se podría arreglar con este disparador

CREATE OR REPLACE TRIGGER in_mensaje
INSTEAD OF INSERT ON MENSAJES
BEGIN
INSERT INTO MENSAJES_TIPO VALUES (:new.codigo,:new.tipo);
INSERT INTO MENSAJES_TEXTO VALUES (:new.codigo,:new.texto);
END in_mensaje;

--4
CREATE TABLE MENSAJES_BORRADOS (
    codigo VARCHAR2(20),
    texto VARCHAR2(200)
);

CREATE OR REPLACE TRIGGER mensaje_delete
AFTER DELETE ON MENSAJES_TEXTO FOR EACH ROW
BEGIN
INSERT INTO MENSAJES_BORRADOS VALUES (:old.codigo,:old.texto);
END mensaje_delete;

--5
BEGIN
BEGIN DBMS_SCHEDULER.CREATE_JOB(
job_name => 'borrar_mensajes_eliminados',
job_type => 'PLSQL_BLOCK',
job_action => 'BEGIN DELETE * FROM MENSAJES_BORRADOS,
start_date => SYSDATE+1,
repeat_interval => 'FREQ=SECONDLY;INTERVAL=120',
enabled => TRUE);
END;


    
