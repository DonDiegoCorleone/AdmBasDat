--e
create or replace PACKAGE PK_ASIGNACION_GRUPOS as
PROCEDURE PR_ASIGNA_ASIGNADOS;
END PK_ASIGNACION_GRUPOS;

create or replace PACKAGE BODY PK_ASIGNACION_GRUPOS AS
PROCEDURE PR_ASIGNA_ASIGNADOS IS

CURSOR c_nuevo_ingreso IS SELECT A.GRUPOS_ASIGNADOS,A.NEXPEDIENTE FROM ALUMNOS_EXT A 
JOIN NUEVO_INGRESO P ON A.DOCUMENTO=P.DOCUMENTO
where regexp_like (A.GRUPOS_ASIGNADOS,'[A-Z]');

CURSOR c_asignaturas IS SELECT CODIGO,GRUPO FROM TEMP_ASIGNATURAS;

TITULACION VARCHAR2(200);
ASIG_REF VARCHAR2(200);
BEGIN

FOR varAlumno in c_nuevo_ingreso loop

TITULACION:=SUBSTR(varAlumno.nexpediente,1,4);

NORMALIZA_ASIGNATURAS(varAlumno.grupos_asignados,TITULACION);

FOR varAsignaturas in c_asignaturas loop

IF varAsignaturas.grupo is NULL THEN
INSERT INTO ERRORES VALUES (sysdate,'Asignatura sin grupo',varAsignaturas.codigo,CURSO_ACTUAL(),null,null,varAlumno.nexpediente,TITULACION);
ELSE
SELECT REFERENCIA INTO ASIG_REF FROM ASIGNATURA WHERE CODIGO=varAsignaturas.codigo;
UPDATE ASIGNATURAS_MATRICULA SET GRUPO_ID=varAsignaturas.grupo WHERE ASIGNATURA_REFERENCIA=ASIG_REF AND MATRICULA_EXPEDIENTES_NEXP=varAlumno.nexpediente;

END IF;

END LOOP;

end loop;

END;
END PK_ASIGNACION_GRUPOS;

--j
CREATE TABLE ENCUESTA_NUEVA (
DOCUMENTO VARCHAR2(20 BYTE),
EXPEDIENTE VARCHAR2(100 BYTE),
ARCHIVO VARCHAR2(100 BYTE),
PREFERENCIAS VARCHAR2(200 BYTE),
FECHA VARCHAR2(40 BYTE)
);

--i
create or replace PROCEDURE PR_ASIGNA_RESTO_NUEVO IS
CURSOR c_nuevo_ingreso IS SELECT * FROM NUEVO_INGRESO N
JOIN MATRICULA M ON M.NUM_ARCHIVO=N.ARCHIVO
WHERE N.ASIG_INGLES IS NULL AND M.TURNO_PREFERENTE='Mañana'
OR M.TURNO_PREFERENTE IS NULL
ORDER BY M.FECHA_DE_MATRICULA ASC;

nMenor number;
nPlazas number;
vGrupo varchar2(10);
TITULACION NUMBER;
nReal number;

BEGIN
FOR varNIngreso IN c_nuevo_ingreso LOOP

	TITULACION:= to_number(SUBSTR(varNIngreso.EXPEDIENTE,1,4));
	nMenor:=0;
	FOR varGrupos in ( SELECT * FROM GRUPO WHERE TITULACION_CODIGO=TITULACION AND INGLES='no' AND TURNO_MANNANA_TARDE='MAÑANA') loop
		SELECT MAX(NUM_REAL) INTO nReal FROM GRUPOS_POR_ASIGNATURA
		WHERE GRUPO_ID=varGrupos.ID;
		nPlazas:=varGrupos.plazas_nuevo_ingreso - nReal;
		IF nPlazas>nMenor THEN
			vGrupo:=varGrupos.ID;
			nMenor:=nPlazas;
		END IF;
	END LOOP;
	UPDATE asignaturas_matricula SET GRUPO_ID=vGrupo WHERE MATRICULA_EXPEDIENTES_NEXP=varNIngreso.EXPEDIENTE;
END LOOP;
end PR_ASIGNA_RESTO_NUEVO;
